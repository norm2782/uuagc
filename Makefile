# Simple makefile to build UUAG.
# Nothing fancy, just as simple as possible to get things done quickly.
#   --Alexey

help:
	echo "This will be the help message"

# Directories
SRC_DIR = src
SRC_AG_DIR = src-ag

# The following variables should be read from a configuration file
AG = uuagc
BUILD_DIR = dist/build
AG_BINARY = $(BUILD_DIR)/$(SRC_DIR)/$(AG)
RUN_HASKELL = runghc
CABAL_BUILD = $(RUN_HASKELL) Setup.hs build
CABAL_CONFIG = .setup-config

# We generate datatype definitions for these AG files.
SRC_AG_SYN_NAMES = AbstractSyntax.ag ConcreteSyntax.ag ErrorMessages.ag\
	 Rules.ag HsToken.ag Code.ag Expression.ag Patterns.ag

# And semantic functions from these AG files.
SRC_AG_SEM_NAMES = DefaultRules.ag GenerateCode.ag PrintCode.ag \
	 PrintErrorMessages.ag SemHsTokens.ag SemRules.ag \
	Transform.ag

SRC_AG_SYN = $(addprefix $(SRC_AG_DIR)/,$(SRC_AG_SYN_NAMES))
SRC_AG_SEM = $(addprefix $(SRC_AG_DIR)/,$(SRC_AG_SEM_NAMES))
SRC_AG = $(SRC_AG_SYN) $(SRC_AG_SEM)

# The corresponding haskell sources
SRC_HS_SYN = $(addprefix $(SRC_DIR)/,$(patsubst %.ag,%.hs,$(SRC_AG_SYN_NAMES)))
SRC_HS_SEM = $(addprefix $(SRC_DIR)/,$(patsubst %.ag,%.hs,$(SRC_AG_SEM_NAMES)))

# Generate dependencies for ag files
DEPEND_AG = ag.depend

depend_ag: $(DEPEND_AG)

DEP_PROG = scripts/mkAGdepend.sh

$(DEPEND_AG): Makefile $(SRC_AG)
	@echo "# Dependencies generated by Makefile, do not edit." > $(DEPEND_AG)
	@for agf in $(SRC_AG); do \
          sh $(DEP_PROG) . . $$agf >> $(DEPEND_AG); \
        done

# Dependencies between ag files
-include $(DEPEND_AG)

# Dependencies on ag files by hs files
# ugly: change directory per file
#       and the "cd .." precludes using a depth of more than one
#       and too directory specific
$(SRC_HS_SYN): $(SRC_DIR)/%.hs: $(SRC_AG_DIR)/%.ag
	cd $(SRC_AG_DIR); \
	$(AG) -dp $*.ag -o ../$(SRC_DIR)/$*.hs; \
	cd ..

$(SRC_HS_SEM): $(SRC_DIR)/%.hs: $(SRC_AG_DIR)/%.ag
	cd $(SRC_AG_DIR); \
	$(AG) -csfp --newtypes --wrappers $*.ag -o ../$(SRC_DIR)/$*.hs; \
	cd ..

# HS source files for uuag
SRC_HS_NAMES = Ag.hs CommonTypes.hs DepTypes.hs Expr.hs HsTokenScanner.hs Options.hs Parser.hs Scanner.hs Streaming.hs TokenDef.hs Transform.hs
SRC_HS = $(addprefix $(SRC_DIR)/,$(SRC_HS_NAMES))

# Building the uuagc system invokes cabal build
$(AG_BINARY): $(SRC_HS) $(SRC_HS_SEM) $(SRC_HS_SYN) $(CABAL_CONFIG)
	@$(CABAL_BUILD)

$(CABAL_CONFIG):
	@echo "Must run: 'runhaskell Setup.hs configure' first"