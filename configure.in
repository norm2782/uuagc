dnl
dnl UUAG configure script
dnl

AC_INIT(VERSION)
# Parts borrowed from Generic Haskell's configure script

# Safety check: Ensure that we are in the correct source directory.
AC_CONFIG_SRCDIR([uuagc.cabal.in])

AC_PATH_PROG(SED,sed)

if test "$SED" = ""; then
  AC_MSG_ERROR([Cannot continue without sed.])
fi

AC_PATH_PROG(GREP,grep)

if test "$GREP" = ""; then
  AC_MSG_ERROR([Cannot continue without grep.])
fi

AC_PATH_PROG(CUT,cut)

if test "$CUT" = ""; then
  AC_MSG_ERROR([Cannot continue without cut.])
fi

# check for AG system
AC_PATH_PROG(UUAGC,uuagc)

# allow a different AG compiler to be specified
AC_ARG_WITH(ag,
[  -with-ag=<AG compiler>
       Use a command different from 'ag' to compile attribute grammar code.
],
[WithAG="$withval"],
[WithAG="$UUAGC"]
)

UUAGC="$WithAG"

if test "$UUAGC" = ""; then
  AC_MSG_ERROR([Cannot continue without an AG compiler.])
fi

# allow a different Cabal build directory to be specified
AC_ARG_WITH(bdir,
[  -with-bdir=<Cabal build dir>
       Use a custom Cabal cuild directory (default: dist/build).
],
[BDir="$withval"],
[BDir=dist/build]
)

BUILD_DIR="$BDir"
AC_SUBST(BUILD_DIR)

# specify which runhaskell to use
AC_ARG_WITH(rh,
[  -with-rh=<run haskell>
       Haskell interpreter to invoke Cabal.
],
[WithRH="$withval"],
[WithRH=""]
)

RUN_HASKELL="$WithRH"
AC_SUBST(RUN_HASKELL)

if test "$RUN_HASKELL" = ""; then
  AC_MSG_ERROR([Cannot continue without a Haskell interpreter (runghc).])
fi

AC_PATH_PROG(CHMOD,chmod)

# cheap relative_dir, see GH for proper use
relative_dir=.

# checking for VERSION file
if test -r "${relative_dir}/VERSION"; then
   FULLVERSION=`cat ${relative_dir}/VERSION`
   VERSION=`echo ${FULLVERSION} | ${CUT} -f1 -d' '`;
else
   AC_MSG_ERROR([Cannot find VERSION file.]);
fi
AC_SUBST(FULLVERSION)
AC_SUBST(VERSION)


AC_OUTPUT(Makefile uuagc.cabal scripts/mkAGdepend.sh)
${CHMOD} ugo+x scripts/mkAGdepend.sh